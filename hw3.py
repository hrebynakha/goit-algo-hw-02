"""
У багатьох мовах програмування ми маємо справу з виразами, 
виділеними символами-розділювачами, такими як круглі ( ), квадратні [ ] або фігурні дужки { }.

Напишіть програму, яка читає рядок з послідовністю символів-розділювачів, 
наприклад, ( ) { [ ] ( ) ( ) { } } }, і надає відповідне повідомлення, 
коли розділювачі симетричні, несиметричні, наприклад ( ( ( ) , або коли розділювачі різних видів стоять у парі, як-от ( }.

Використовуйте стек, щоб запам'ятати відкриті в даний момент символи-розділювачі.
Приклад очікуваного результату:
( ){[ 1 ]( 1 + 3 )( ){ }}: Симетрично
( 23 ( 2 - 3);: Несиметрично
( 11 }: Несиметрично

"""

txt = '( ){[ 1 ]( 1 + 3 )( ){ }}'
txt2 = '( 23 ( 2 - 3);'
txt3 = '( 11 }'

def check_text(text):
    """Check text"""
    stack = []
    brakets = {'(':')','[':']','{':'}'}
    for ch in text:
        start = stack
        if ch in brakets.keys():
            stack.append(ch)
        append=stack
        if ch in brakets.values():
            if brakets[stack.pop()] != ch:
                return False
        print(f"Sym '{ch}' start:{start} append:{append} end: {stack}")
    if len(stack) == 0:
        return True
    return False

print(check_text(txt))
print(check_text(txt2))
print(check_text(txt3))
